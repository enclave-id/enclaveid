[tool.coverage.run]
branch = true
source = [ "data_pipeline" ]

[tool.coverage.report]
exclude_lines = [ "if TYPE_CHECKING:" ]
show_missing = true

[tool.pytest.ini_options]
addopts = "--cov --cov-report html:'../../coverage/apps/data-pipeline/html' --cov-report xml:'../../coverage/apps/data-pipeline/coverage.xml' --html='../../reports/apps/data-pipeline/unittests/html/index.html' --junitxml='../../reports/apps/data-pipeline/unittests/junit.xml'"

[tool.poetry]
name = "data-pipeline"
version = "1.0.0"
description = "Automatically generated by Nx."
authors = [ ]
license = "Proprietary"
readme = "README.md"
group = { }

  [[tool.poetry.packages]]
  include = "data_pipeline"

  [tool.poetry.dependencies]
  python = ">=3.9,<3.11"
  dagster = "^1.7.3"
  openai = "^1.24.0"
  aiolimiter = "^1.1.0"
  adlfs = "^2024.4.1"
  dagster-cloud = "^1.7.3"
  dagster-polars = "^0.23.3"
  httpx = "^0.27.0"
  numpy = "^1.26.4"
  polars = "^0.20.23"
  pgvector = "^0.2.5"
  pyarrow = "^16.0.0"
  universal-pathlib = "^0.2.2"
  tqdm = "^4.66.2"

[tool.ruff]
exclude = [ ".ruff_cache", ".svn", ".tox", ".venv", "dist" ]
line-length = 88
indent-width = 4

  [tool.ruff.lint]
  select = [ "E", "F", "UP", "B", "SIM", "I" ]
  ignore = [ ]
  fixable = [ "ALL" ]
  unfixable = [ ]

[build-system]
requires = [ "poetry-core" ]
build-backend = "poetry.core.masonry.api"
