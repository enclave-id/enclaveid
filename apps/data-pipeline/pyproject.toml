[tool.coverage.run]
branch = true
source = [ "data_pipeline" ]

[tool.coverage.report]
exclude_lines = ['if TYPE_CHECKING:']
show_missing = true

[tool.pytest.ini_options]
addopts = "--cov --cov-report html:'../../coverage/apps/data-pipeline/html' --cov-report xml:'../../coverage/apps/data-pipeline/coverage.xml' --html='../../reports/apps/data-pipeline/unittests/html/index.html' --junitxml='../../reports/apps/data-pipeline/unittests/junit.xml'"

[tool.poetry]
name = "data-pipeline"
version = "1.0.0"
description = "Automatically generated by Nx."
authors = [ ]
license = 'Proprietary'
readme = 'README.md'

  [[tool.poetry.packages]]
  include = "data_pipeline"

  [[tool.poetry.source]]
  name = "nvidia"
  url = "https://pypi.nvidia.com"
  priority = "supplemental"

  [tool.poetry.dependencies]
  python = ">=3.10,<3.11"
  dagster = "^1.7.3"
  openai = "^1.24.0"
  aiolimiter = "^1.1.0"
  adlfs = "^2024.4.1"
  dagster-cloud = "^1.7.3"
  dagster-polars = "^0.23.3"
  numpy = "^1.26.4"
  polars = "^0.20.23"
  pgvector = "^0.2.5"
  universal-pathlib = "^0.2.2"
  psycopg = "^3.1.19"
  psycopg-binary = "^3.1.19"
  tqdm = "^4.66.2"
  mistralai = "^0.1.8"
  dagster-k8s = "^0.23.7"

  [tool.poetry.group.ml.dependencies]
  # These are very large packages.
  # They are cached as a docker layer and shouldn't be changed often.
  torch = "2.3.0"
  vllm = "0.4.2"
  sentence-transformers = "3.0.0"
  dask-cudf-cu12 = { version = "24.4.0", source = "nvidia" }
  cuml-cu12 = { version = "24.4.0", source = "nvidia" }
  cudf-cu12 = { version = "24.4.0", source = "nvidia" }

  [tool.poetry.group.dev.dependencies]
  autopep8 = "2.0.2"
  ruff = "0.1.5"
  pytest = "7.3.1"
  pytest-sugar = "0.9.7"
  pytest-cov = "4.1.0"
  pytest-html = "3.2.0"
  dagster-webserver = "^1.7.3"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.dagster]
module_name = "data_pipeline"

[tool.ruff]
exclude = [
  ".ruff_cache",
  ".svn",
  ".tox",
  ".venv",
  "dist",
]

line-length = 88
indent-width = 4

[tool.ruff.lint]
select = [
  # pycodestyle
  "E",
  # Pyflakes
  "F",
  # pyupgrade
  "UP",
  # flake8-bugbear
  "B",
  # flake8-simplify
  "SIM",
  # isort
  "I",
]
ignore = []

fixable = ["ALL"]
unfixable = []

