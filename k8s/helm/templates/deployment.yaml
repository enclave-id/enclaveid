apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "enclaveid.fullname" . }}
  labels:
    {{- include "enclaveid.labels" . | nindent 4 }}
spec:
  {{- if not .Values.autoscaling.enabled }}
  replicas: {{ .Values.replicaCount }}
  {{- end }}
  selector:
    matchLabels:
      {{- include "enclaveid.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "enclaveid.selectorLabels" . | nindent 8 }}
    spec:
      volumes:
        - name: unencrypted-shared-storage
          persistentVolumeClaim:
            claimName: {{ .Release.Name }}-shared-pvc
        - name: api-tmpfs
          emptyDir:
            medium: Memory
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "enclaveid.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      initContainers:
        - name: create-secrets
          image: "{{ .Values.initImages.createSecrets.repository }}@{{ .Values.initImages.createSecrets.tag }}"
          imagePullPolicy: {{ .Values.initImages.createSecrets.pullPolicy }}
          args: [
            "{{ .Values.initImages.createSecrets.arguments.environment }}",
            "{{ .Values.initImages.createSecrets.arguments.keyName }}",
            "{{ .Values.initImages.createSecrets.arguments.kvStoreName }}",
            "{{ .Values.initImages.createSecrets.arguments.managedIdentity }}",
            "{{ .Values.initImages.createSecrets.arguments.maaEndpoint }}",
            "{{ .Values.initImages.createSecrets.arguments.workloadMeasurement }}"
          ]
          volumeMounts:
            - mountPath: /tmp
              name: api-tmpfs
            - mountPath: /mnt/unencrypted-shared-storage
              name: unencrypted-shared-storage
      containers:
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.images.api.repository }}@{{ .Values.images.api.tag }}"
          imagePullPolicy: {{ .Values.images.api.pullPolicy }}
          ports:
            - name: http
              containerPort: 80
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /
              port: http
          readinessProbe:
            httpGet:
              path: /
              port: http
          volumeMounts:
            - mountPath: /tmp
              name: api-tmpfs
            - mountPath: /mnt/unencrypted-shared-storage
              name: unencrypted-shared-storage
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
        # Add sidecars
        {{- if .Values.sidecars }}
        {{- range .Values.sidecars }}
        - name: {{ .name }}
          securityContext:
            {{- toYaml .securityContext | nindent 12 }}
          image: "{{ .image.repository }}@{{ .image.tag }}"
          imagePullPolicy: {{ .image.pullPolicy }}
          ports:
            {{- range .ports }}
            - name: {{ .name }}
              containerPort: {{ .containerPort }}
              protocol: {{ .protocol }}
            {{- end }}
          volumeMounts:
            {{- range .volumeMounts }}
            - mountPath: {{ .mountPath }}
              name: {{ .name }}
            {{- end }}
          resources:
            {{- toYaml .resources | nindent 12 }}
        {{- end }}
        {{- end }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
