apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "enclaveid.fullname" . }}
  labels:
    {{- include "enclaveid.labels" . | nindent 4 }}
spec:
  {{- if not .Values.autoscaling.enabled }}
  replicas: {{ .Values.replicaCount }}
  {{- end }}
  selector:
    matchLabels:
      {{- include "enclaveid.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "enclaveid.selectorLabels" . | nindent 8 }}
    spec:
      volumes:
        # TODO: Template this volume mount because it cannot be shared across pods
        # This volume mount is used to share a tmpfs volume between the
        # init container and the main container, to avoid writing certs to disk unencrypted
        - name: shared-tmp
          emptyDir:
            medium: Memory
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "enclaveid.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      initContainers:
        - name: create-secrets
          image: "{{ .Values.initImages.createSecrets.repository }}@{{ .Values.initImages.createSecrets.tag }}"
          imagePullPolicy: {{ .Values.initImages.createSecrets.pullPolicy }}
          args: [
            "{{ .Values.initImages.createSecrets.arguments.keyName }}",
            "{{ .Values.initImages.createSecrets.arguments.kvStoreName }}",
            "{{ .Values.initImages.createSecrets.arguments.enableConfidentiality }}",
            "{{ .Values.initImages.createSecrets.arguments.managedIdentity }}",
            "{{ .Values.initImages.createSecrets.arguments.maaEndpoint }}",
            "{{ .Values.initImages.createSecrets.arguments.workloadMeasurement }}"
          ]
          # TODO: Template this volume mount because it cannot be shared across pods
          volumeMounts:
            - mountPath: /tmp
              name: shared-tmp
      containers:
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.images.api.repository }}@{{ .Values.images.api.tag }}"
          imagePullPolicy: {{ .Values.images.api.pullPolicy }}
          ports:
            - name: http
              containerPort: 80
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /
              port: http
          readinessProbe:
            httpGet:
              path: /
              port: http
          # TODO: Template this volume mount because it cannot be shared across pods
          volumeMounts:
            - mountPath: /tmp
              name: shared-tmp
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
