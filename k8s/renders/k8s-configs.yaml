---
# Source: enclaveid/charts/postgresql/templates/primary/networkpolicy.yaml
kind: NetworkPolicy
apiVersion: networking.k8s.io/v1
metadata:
  name: enclaveid-postgresql
  namespace: "default"
  labels:
    app.kubernetes.io/instance: enclaveid
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: postgresql
    app.kubernetes.io/version: 16.2.0
    helm.sh/chart: postgresql-15.0.0
    app.kubernetes.io/component: primary
spec:
  podSelector:
    matchLabels:
      app.kubernetes.io/instance: enclaveid
      app.kubernetes.io/name: postgresql
      app.kubernetes.io/component: primary
  policyTypes:
    - Ingress
    - Egress
  egress:
    - {}
  ingress:
    - ports:
        - port: 5432
---
# Source: enclaveid/charts/guacamole/templates/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: enclaveid-guacamole
  labels:
    app.kubernetes.io/name: guacamole
    helm.sh/chart: guacamole-1.4.1
    app.kubernetes.io/instance: enclaveid
    app.kubernetes.io/version: "1.5.5"
    app.kubernetes.io/managed-by: Helm
---
# Source: enclaveid/charts/postgresql/templates/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: enclaveid-postgresql
  namespace: "default"
  labels:
    app.kubernetes.io/instance: enclaveid
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: postgresql
    app.kubernetes.io/version: 16.2.0
    helm.sh/chart: postgresql-15.0.0
automountServiceAccountToken: false
---
# Source: enclaveid/templates/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: enclaveid
  labels:
    helm.sh/chart: enclaveid-0.0.0
    app.kubernetes.io/name: enclaveid
    app.kubernetes.io/instance: enclaveid
    app.kubernetes.io/version: "0.0.0"
    app.kubernetes.io/managed-by: Helm
---
# Source: enclaveid/charts/guacamole/templates/secret.yaml
apiVersion: v1
kind: Secret
metadata:
  name: enclaveid-guacamole
  labels:
    app.kubernetes.io/name: guacamole
    helm.sh/chart: guacamole-1.4.1
    app.kubernetes.io/instance: enclaveid
    app.kubernetes.io/version: "1.5.5"
    app.kubernetes.io/managed-by: Helm
type: Opaque
data:
  GUACD_HOSTNAME: "Z3VhY2Ftb2xlLWd1YWNk"
  GUACD_PORT: "NDgyMg=="
  POSTGRES_HOSTNAME: "ZW5jbGF2ZWlkLXBvc3RncmVzcWw="
  POSTGRES_PORT: "NTQzMg=="
  POSTGRES_DATABASE: "ZW5jbGF2ZWlkX2d1YWNhbW9sZQ=="
  POSTGRES_USER: "ZW5jbGF2ZWlk"
  POSTGRES_PASSWORD: "ZW5jbGF2ZWlk"
  WEBAPP_CONTEXT: "Uk9PVA=="
---
# Source: enclaveid/charts/postgresql/templates/secrets.yaml
apiVersion: v1
kind: Secret
metadata:
  name: enclaveid-postgresql
  namespace: "default"
  labels:
    app.kubernetes.io/instance: enclaveid
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: postgresql
    app.kubernetes.io/version: 16.2.0
    helm.sh/chart: postgresql-15.0.0
type: Opaque
data:
  postgres-password: "MnVQSlhrQU1uaQ=="
  password: "ZW5jbGF2ZWlk"
  # We don't auto-generate LDAP password when it's not provided as we do for other passwords
---
# Source: enclaveid/charts/postgresql/templates/primary/initialization-configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: enclaveid-postgresql-init-scripts
  namespace: "default"
  labels:
    app.kubernetes.io/instance: enclaveid
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: postgresql
    app.kubernetes.io/version: 16.2.0
    helm.sh/chart: postgresql-15.0.0
data:
  init-api.sql: |
    CREATE DATABASE enclaveid_api;
    GRANT ALL PRIVILEGES ON DATABASE enclaveid_api TO enclaveid;
  init-guacamole.sql: |
    CREATE DATABASE enclaveid_guacamole;
    GRANT ALL PRIVILEGES ON DATABASE enclaveid_guacamole TO enclaveid;
---
# Source: enclaveid/templates/pvc.yaml
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: enclaveid-shared-pvc
spec:
  accessModes:
    - ReadWriteMany
  resources:
    requests:
      storage: 1Gi
---
# Source: enclaveid/charts/guacamole/templates/service-guacamole.yaml
apiVersion: v1
kind: Service
metadata:
  name: enclaveid-guacamole-guacamole
  labels:
    app.kubernetes.io/name: guacamole
    helm.sh/chart: guacamole-1.4.1
    app.kubernetes.io/instance: enclaveid
    app.kubernetes.io/version: "1.5.5"
    app.kubernetes.io/managed-by: Helm
spec:
  type: ClusterIP
  ports:
    - port: 80
      targetPort: http
      protocol: TCP
      name: http
  selector:
    app.kubernetes.io/name: guacamole-guacamole
    app.kubernetes.io/instance: enclaveid
---
# Source: enclaveid/charts/guacamole/templates/service-guacd.yaml
apiVersion: v1
kind: Service
metadata:
  name: enclaveid-guacamole-guacd
  labels:
    app.kubernetes.io/name: guacamole
    helm.sh/chart: guacamole-1.4.1
    app.kubernetes.io/instance: enclaveid
    app.kubernetes.io/version: "1.5.5"
    app.kubernetes.io/managed-by: Helm
spec:
  type: ClusterIP
  ports:
    - port: 4822
      targetPort: guacd
      protocol: TCP
      name: guacd
  selector:
    app.kubernetes.io/name: guacamole-guacd
    app.kubernetes.io/instance: enclaveid
---
# Source: enclaveid/charts/postgresql/templates/primary/svc-headless.yaml
apiVersion: v1
kind: Service
metadata:
  name: enclaveid-postgresql-hl
  namespace: "default"
  labels:
    app.kubernetes.io/instance: enclaveid
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: postgresql
    app.kubernetes.io/version: 16.2.0
    helm.sh/chart: postgresql-15.0.0
    app.kubernetes.io/component: primary
  annotations:
    # Use this annotation in addition to the actual publishNotReadyAddresses
    # field below because the annotation will stop being respected soon but the
    # field is broken in some versions of Kubernetes:
    # https://github.com/kubernetes/kubernetes/issues/58662
    service.alpha.kubernetes.io/tolerate-unready-endpoints: "true"
spec:
  type: ClusterIP
  clusterIP: None
  # We want all pods in the StatefulSet to have their addresses published for
  # the sake of the other Postgresql pods even before they're ready, since they
  # have to be able to talk to each other in order to become ready.
  publishNotReadyAddresses: true
  ports:
    - name: tcp-postgresql
      port: 5432
      targetPort: tcp-postgresql
  selector:
    app.kubernetes.io/instance: enclaveid
    app.kubernetes.io/name: postgresql
    app.kubernetes.io/component: primary
---
# Source: enclaveid/charts/postgresql/templates/primary/svc.yaml
apiVersion: v1
kind: Service
metadata:
  name: enclaveid-postgresql
  namespace: "default"
  labels:
    app.kubernetes.io/instance: enclaveid
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: postgresql
    app.kubernetes.io/version: 16.2.0
    helm.sh/chart: postgresql-15.0.0
    app.kubernetes.io/component: primary
spec:
  type: ClusterIP
  sessionAffinity: None
  ports:
    - name: tcp-postgresql
      port: 5432
      targetPort: tcp-postgresql
      nodePort: null
  selector:
    app.kubernetes.io/instance: enclaveid
    app.kubernetes.io/name: postgresql
    app.kubernetes.io/component: primary
---
# Source: enclaveid/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: enclaveid
  labels:
    helm.sh/chart: enclaveid-0.0.0
    app.kubernetes.io/name: enclaveid
    app.kubernetes.io/instance: enclaveid
    app.kubernetes.io/version: "0.0.0"
    app.kubernetes.io/managed-by: Helm
spec:
  type: ClusterIP
  ports:
    - port: 80
      targetPort: http
      protocol: TCP
      name: http
  selector:
    app.kubernetes.io/name: enclaveid
    app.kubernetes.io/instance: enclaveid
